<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 【管理员】 -->
<mapper namespace="com.zna.server.dao.AdminDAO">
    <!--根据手机号查找管理员信息-->
    <select id="queryAdminInfoByMobile" parameterType="java.lang.String" resultType="com.zna.server.entity.bo.AdminBO">
        select zna_admin.*,zna_role.id as  roleId,zna_role.role_name AS roleName
            from  zna_admin left  join zna_role  on  zna_role.id=zna_admin.role_id where mobile =  #{mobile}
    </select>

    <sql id="limit">
        limit #{pageOffset},#{pageSize}
    </sql>

    <!--添加管理员信息(管理員注冊)-->
    <insert id="adminRegister" parameterType="com.zna.server.entity.bo.AdminBO" useGeneratedKeys="true"
            keyProperty="id">
        insert into zna_admin  set name = #{name},
        mobile = #{mobile},
        password=#{password},
        create_time=now(),
        status=#{status},
        role_id=#{roleId},
        update_time=now()
    </insert>

    <!-- 查找角色名是否注册过  -->
    <select id="selectCountByRoleName" parameterType="String" resultType="Integer">
        select count(role_name) from zna_role where role_name = #{roleName}
    </select>
    <!-- 查找手机号是否注册过  -->
    <select id="selectCountByMobile" parameterType="String" resultType="int">
       select count(id) from zna_admin where mobile = #{mobile}
    </select>

    <!-- 添加角色信息  -->
    <insert id="addRole" parameterType="com.zna.server.entity.bo.RoleBO"  useGeneratedKeys="true"
            keyProperty="id">
        insert into zna_role  set role_name = #{roleName},
        create_time=now(),
        update_time=now()
    </insert>

    <!-- 给角色赋予权限  -->
    <insert id="addRoleMenu">
        insert into zna_role_menu
        (role_id,menu_id)
        values
        <foreach collection="menuIdArr" item="menuId" separator=",">
            (#{roleId},#{menuId})
        </foreach>
    </insert>

    <!-- 给角色赋予权限  -->
    <insert id="addRoleHotel">
        insert into zna_role_hotel
        (role_id,hotel_id)
        values
        <foreach collection="hotelIdArr" item="hotelId" separator=",">
            (#{roleId},#{hotelId})
        </foreach>
    </insert>

    <!--  根据角色id删除角色信息  -->
    <delete id="delRoleById" parameterType="Integer">
        delete  from  zna_role where
        <foreach  collection="roleIds" item="roleId" separator="OR">
            id=#{roleId}
        </foreach>
    </delete>

    <!-- 下拉框展示 查询所有角色  -->
    <select id="getRoleList" resultType="com.zna.server.entity.bo.RoleBO">
        SELECT id,role_name FROM zna_role
        <if test="status==null or status==''">
            where id!='1'
        </if>
    </select>

    <!-- 根据角色id删除对应的所有权限  -->
    <delete id="delRoleMenuByRoleId" parameterType="Integer">
        DELETE FROM zna_role_menu WHERE role_id=#{roleId}
    </delete>

    <!-- 根据角色id删除对应的所有权限  -->
    <delete id="delRoleHotelByRoleId" parameterType="Integer">
        DELETE FROM zna_role_hotel WHERE role_id=#{roleId}
    </delete>

    <!--查询角色下是否存在用户-->
    <select id="checkRoleUser"   parameterType="java.lang.Integer"  resultType="int">
           SELECT count(id) FROM zna_admin  WHERE  role_id =#{roleId}
    </select>
    <!--根据角色id修改角色名称  -->
    <select id="updateRoleNameByRoleId">
        UPDATE zna_role SET
        <if test="roleName !=null and roleName!=''">
            role_name=#{roleName},
        </if>
        update_time=now() WHERE id=#{roleId}
    </select>
    <!--根据角色名称查询角色信息  -->
    <select id="getRoleByName" resultType="com.zna.server.entity.bo.RoleBO" parameterType="java.lang.String">
        select * from zna_role
        <if test="roleName!=null and roleName!=''">
            where role_name like '%${roleName}%'
        </if>
    </select>
    <!--根据角色id查询角色信息  -->
    <select id="getRoleById" resultType="com.zna.server.entity.bo.RoleBO" parameterType="java.lang.Integer">
        select * from zna_role
        <if test="roleId!=null and roleId!=''">
            where id = #{roleId}
        </if>
    </select>
    <!--修改admin用户信息  -->
    <update id="updateAdminUser"  parameterType="com.zna.server.entity.bo.AdminBO" >
        UPDATE zna_admin
        <set>
            <if test="name!=null and name!=''" >`name`=#{name},</if>
            <if test="mobile !=null and mobile!='' ">`mobile`=#{mobile},</if>
            <if test="status!=null and status!=''" > `status`=#{status},</if>
            <if test="roleId!=null and roleId!=''" > `role_id`=#{roleId},</if>
            <if test="password!=null and password!=''" > `password`=#{password},</if>
        </set>
        WHERE id=#{id}
    </update>
    <!--根据用户id删除信息  -->
    <delete id="delAdminById">
        DELETE FROM zna_admin WHERE
        <foreach  collection="idArr" item="id" separator="OR">
            id=#{id}
        </foreach>
    </delete>
    <!--查询角色拥有的权限-->
    <select id="getMenuByRoleId"  resultType="com.zna.server.entity.bo.MenuBO"  parameterType="java.lang.Integer">
        select me.*
        from zna_role_menu  rm
        inner join  zna_menu me
        on rm.menu_id=me.id
        where  rm.role_id=#{roleId}
    </select>

    <!--&lt;!&ndash;查询角色拥有的权限&ndash;&gt;-->
    <!--<select id="getHotelByRoleId"  resultType="com.zna.server.entity.bo.HotelBO"  parameterType="java.lang.Integer">-->
        <!--select h.*-->
        <!--from zna_role_hotel as  rh-->
        <!--inner join  zna_menuhotel as h-->
        <!--on rh.hotel_id=h.id-->
        <!--where  rh.role_id=#{roleId} and h.status='yes'-->
    <!--</select>-->
    <!--根据 用户id\角色id\用户名 查询用户信息-->
    <select id="getAdminByCond" parameterType="java.util.Map"  resultType="com.zna.server.entity.bo.AdminBO">
        select zna_admin.id,`name`,mobile,role_id,role_name,zna_admin.create_time
        from zna_admin ,zna_role
        where role_id=zna_role.id
        <if test="userId!=null and userId!=''">
           and zna_admin.id=#{userId}
        </if>
        <if test="roleId!=null and roleId!=''">
            and role_id=#{roleId}
        </if>
        <if test="userName!=null and userName!=''">
            and `name` like '%${userName}%'
        </if>

        <include refid="adminLimit" />
    </select>

    <sql id="adminLimit">
        limit #{pageNo},#{pageSize}
    </sql>

    <!--根据 用户id\角色id\用户名 查询用户信息总数-->
    <select id="getAdminCountByCond" parameterType="java.util.Map"  resultType="java.lang.Integer">
        select count(*)
        from zna_admin,zna_role
        where role_id=zna_role.id
        <if test="id!=null and id!=''">
            and admin.id=#{id}
        </if>
        <if test="roleId!=null and roleId!=''">
            and role_id=#{roleId}
        </if>
        <if test="userName!=null and userName!=''">
            and `name` like '%${userName}%'
        </if>
    </select>

    <!--查询所有菜单-->
    <select id="getMenuList" resultType="com.zna.server.entity.bo.MenuBO">
        select * from zna_menu
    </select>

    <!--查询角色是否有酒店权限-->
    <select id="queryHotelCount"    resultType="int" >
      SELECT COUNT(*)  FROM `zna_role_hotel` WHERE role_id =#{roleId} AND hotel_id =#{hotelId}
    </select>

    <insert id="addHotel"  >
        INSERT INTO `zna_role_hotel` ( `role_id`, `hotel_id`) VALUES (#{roleId},#{hotelId});
    </insert>

    <!--  添加权限信息  -->
    <insert id="addMenuByPid" parameterType="com.zna.server.entity.bo.MenuBO" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO zna_menu  SET
        menu_name=#{menuName},
        pid=#{pid},
        url=#{url},
        path=#{path},
        `index`=#{index},
        icon=#{icon}
    </insert>


</mapper>